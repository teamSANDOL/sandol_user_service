"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-$*l(x42p$)r1e$4nhs()m_wnc+*v_2ct()5bukr14q)f(1cka8"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

APPEND_SLASH = True

ALLOWED_HOSTS = ["*"]

SIGNATURE_AUTH_WHITELIST = [
    "/user/swagger/",
    "/user/redoc/",
    "/user/openapi/",
    "/user/admin/",
    "/user/admin/",
    "/user/static/",
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "drf_yasg",
    "rest_framework",
    "users",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "users.middlewares.SignatureAuthMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db" / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

FORCE_SCRIPT_NAME = "/user"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = FORCE_SCRIPT_NAME + "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")  # ✨ 꼭 추가!

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Django Rest Framework 기본 설정
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
    ],
}
# CORS 설정
CSRF_TRUSTED_ORIGINS = [
    "https://sandol.house.sio2.kr",
    "https://user-service:8000",
    "https://sandol.sio2.kr",
]
CORS_ALLOW_CREDENTIALS = True  # 쿠키 포함 허용

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
USE_X_FORWARDED_HOST = True

# SECURE_SSL_REDIRECT = True  # HTTP 요청을 HTTPS로 리디렉트

# swagger 설정
SWAGGER_SETTINGS = {
    "USE_SESSION_AUTH": True,  # 세션 인증을 사용하도록 설정
    "SECURITY_DEFINITIONS": {
        "CSRFToken": {
            "type": "apiKey",
            "in": "header",
            "name": "X-CSRFToken",
        },
        "X-User-ID": {
            "type": "apiKey",
            "in": "header",
            "name": "X-User-ID",
            "description": "사용자의 고유 ID",
        },
        "X-Signature": {
            "type": "apiKey",
            "in": "header",
            "name": "X-Signature",
            "description": "HMAC 서명 (X-User-ID 기반 서명)",
        },
    },
}

SWAGGER_DESCRIPTION = """
### 🛡️ 인증 방식 안내

🔐 이 API는 **HMAC 기반 서명 인증**을 사용합니다.

- 모든 요청에는 다음 헤더가 포함되어야 합니다:
  - `X-User-ID`: 요청자 사용자 ID
  - `X-Signature`: SECRET_KEY와 X-User-ID를 기반으로 생성된 HMAC 서명

- `X-Signature`는 [**/test/signature?user_id=xxx**](./test/signature?user_id=1) API에서 획득할 수 있습니다 (DEBUG 모드에서만 사용 가능)

---

### 예시

```bash
curl -H "X-User-ID: 1" -H "X-Signature: abc123..." https://your.domain/api/...
```

"""


# 시간대 설정
TIME_ZONE = "Asia/Seoul"  # 서버에서 사용하는 시간대 (KST)
USE_TZ = True  # 데이터는 UTC로 저장됨
